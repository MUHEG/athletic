[{"path":"https://muheg.github.io/athletic/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://muheg.github.io/athletic/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://muheg.github.io/athletic/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Hamilton. Author, maintainer. Monash University. Copyright holder.","code":""},{"path":"https://muheg.github.io/athletic/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Matthew Hamilton <matthew.hamilton1@monash.edu> [aut cre] (<https://orcid.org/0000-0001-7407-9194>)  (2024). athletic: Analyse Health Data Athletes Sports Support Staff. Version 0.0.0.9010. https://doi.org/10.5281/zenodo.11043502","code":"@Manual{,   doi = {10.5281/zenodo.11043502},   title = {athletic: Analyse Health Data for Athletes and Sports Support Staff},   author = {Matthew Hamilton <matthew.hamilton1@monash.edu> [aut, cre] (<https://orcid.org/0000-0001-7407-9194>)},   year = {2024},   note = {R package version 0.0.0.9010},   url = {https://muheg.github.io/athletic/}, }"},{"path":[]},{"path":"https://muheg.github.io/athletic/index.html","id":"analyse-health-data-for-athletes-and-sports-support-staff","dir":"","previous_headings":"","what":"Analyse Health Data for Athletes and Sports Support Staff","title":"Analyse Health Data for Athletes and Sports Support Staff","text":"Tools undertaking analysis sports datasets use computational health economic models developed ready4 framework (https://ready4-dev.github.io/ready4/). development version athletic package made available part process testing documenting package. questions, please contact authors (matthew.hamilton2@monash.edu). install development version software, run following commands R console:","code":"utils::install.packages(\"devtools\")  devtools::install_github(\"MUHEG/athletic\")"},{"path":"https://muheg.github.io/athletic/reference/add_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Add counts — add_counts","title":"Add counts — add_counts","text":"add_counts() Add function updates object adding new values new empty fields. Specifically, function implements algorithm add counts. function returns Datasets (list).","code":""},{"path":"https://muheg.github.io/athletic/reference/add_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add counts — add_counts","text":"","code":"add_counts(datasets_ls, sum_chr = c(\"Role\"), uid_1L_chr = \"Client ID\")"},{"path":"https://muheg.github.io/athletic/reference/add_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add counts — add_counts","text":"datasets_ls Datasets (list) sum_chr Sum (character vector), Default: c(\"Role\") uid_1L_chr Unique identifier (character vector length one), Default: 'Client ID'","code":""},{"path":"https://muheg.github.io/athletic/reference/add_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add counts — add_counts","text":"Datasets (list)","code":""},{"path":"https://muheg.github.io/athletic/reference/add_imputed_costs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add imputed costs — add_imputed_costs","title":"Add imputed costs — add_imputed_costs","text":"add_imputed_costs() Add function updates object adding new values new empty fields. Specifically, function implements algorithm add imputed costs. function returns Data (tibble).","code":""},{"path":"https://muheg.github.io/athletic/reference/add_imputed_costs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add imputed costs — add_imputed_costs","text":"","code":"add_imputed_costs(   data_tb,   arrange_by_1L_chr = character(0),   cost_var_1L_chr = \"Cost\",   provider_id_1L_chr = \"ProviderID\" )"},{"path":"https://muheg.github.io/athletic/reference/add_imputed_costs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add imputed costs — add_imputed_costs","text":"data_tb Data (tibble) arrange_by_1L_chr Arrange (character vector length one), Default: character(0) cost_var_1L_chr Cost variable (character vector length one), Default: 'Cost' provider_id_1L_chr Provider identity (character vector length one), Default: 'ProviderID'","code":""},{"path":"https://muheg.github.io/athletic/reference/add_imputed_costs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add imputed costs — add_imputed_costs","text":"Data (tibble)","code":""},{"path":"https://muheg.github.io/athletic/reference/add_severity.html","id":null,"dir":"Reference","previous_headings":"","what":"Add severity — add_severity","title":"Add severity — add_severity","text":"add_severity() Add function updates object adding new values new empty fields. Specifically, function implements algorithm add severity. function returns Data (tibble).","code":""},{"path":"https://muheg.github.io/athletic/reference/add_severity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add severity — add_severity","text":"","code":"add_severity(   data_tb,   severity_args_ls,   appointments_var_1L_chr = \"Appointments\",   date_var_1L_chr = \"Date\",   disciplines_chr = c(\"DE Psychology\", \"Dietetics\", \"Psychiatry\", \"Psychology\"),   end_date_dtm = lubridate::ymd(\"2024-06-30\"),   provider_var_1L_chr = \"ProviderID\",   service_var_1L_chr = \"Service\",   severity_var_1L_chr = \"Severity\",   tenure_var_1L_chr = \"Tenure\",   uid_var_1L_chr = \"UID\" )"},{"path":"https://muheg.github.io/athletic/reference/add_severity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add severity — add_severity","text":"data_tb Data (tibble) severity_args_ls Severity arguments (list) appointments_var_1L_chr Appointments variable (character vector length one), Default: 'Appointments' date_var_1L_chr Date variable (character vector length one), Default: 'Date' disciplines_chr Disciplines (character vector), Default: c(\"DE Psychology\", \"Dietetics\", \"Psychiatry\", \"Psychology\") end_date_dtm End date (date vector), Default: lubridate::ymd(\"2024-06-30\") provider_var_1L_chr Provider variable (character vector length one), Default: 'ProviderID' service_var_1L_chr Service variable (character vector length one), Default: 'Service' severity_var_1L_chr Severity variable (character vector length one), Default: 'Severity' tenure_var_1L_chr Tenure variable (character vector length one), Default: 'Tenure' uid_var_1L_chr Unique identifier variable (character vector length one), Default: 'UID'","code":""},{"path":"https://muheg.github.io/athletic/reference/add_severity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add severity — add_severity","text":"Data (tibble)","code":""},{"path":"https://muheg.github.io/athletic/reference/add_sports_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sports data — add_sports_data","title":"Add sports data — add_sports_data","text":"add_sports_data() Add function updates object adding new values new empty fields. Specifically, function implements algorithm add sports data. function returns Datasets (list).","code":""},{"path":"https://muheg.github.io/athletic/reference/add_sports_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sports data — add_sports_data","text":"","code":"add_sports_data(   datasets_ls,   categories_chr = make_sports_categories(),   drop_sport_1L_lgl = FALSE,   path_1L_chr = character(0),   sports_1L_int = 81L,   sports_tab_1L_int = 2L,   sport_var_1L_chr = \"Medlinks Sport categories\",   sum_chr = c(\"Role\"),   uid_1L_chr = \"Client ID\" )"},{"path":"https://muheg.github.io/athletic/reference/add_sports_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sports data — add_sports_data","text":"datasets_ls Datasets (list) categories_chr Categories (character vector), Default: make_sports_categories() drop_sport_1L_lgl Drop sport (logical vector length one), Default: FALSE path_1L_chr Path (character vector length one), Default: character(0) sports_1L_int Sports (integer vector length one), Default: 81 sports_tab_1L_int Sports tab (integer vector length one), Default: 2 sport_var_1L_chr Sport variable (character vector length one), Default: 'Medlinks Sport categories' sum_chr Sum (character vector), Default: c(\"Role\") uid_1L_chr Unique identifier (character vector length one), Default: 'Client ID'","code":""},{"path":"https://muheg.github.io/athletic/reference/add_sports_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add sports data — add_sports_data","text":"Datasets (list)","code":""},{"path":"https://muheg.github.io/athletic/reference/athletic-package.html","id":null,"dir":"Reference","previous_headings":"","what":"athletic: Analyse Health Data for Athletes and Sports Support Staff — athletic-package","title":"athletic: Analyse Health Data for Athletes and Sports Support Staff — athletic-package","text":"Tools undertaking analysis sports datasets use computational health economic models developed ready4 framework (https://ready4-dev.github.io/ready4/). development version athletic package made available part process testing documenting package. questions, please contact authors (matthew.hamilton2@monash.edu).  Tools undertaking analysis sports datasets use computational health economic models developed ready4 framework (https://ready4-dev.github.io/ready4/). development version athletic package made available part process testing documenting package. questions, please contact authors (matthew.hamilton2@monash.edu).","code":""},{"path":[]},{"path":"https://muheg.github.io/athletic/reference/athletic-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"athletic: Analyse Health Data for Athletes and Sports Support Staff — athletic-package","text":"Maintainer: Matthew Hamilton matthew.hamilton1@monash.edu (ORCID) contributors: Monash University [copyright holder]","code":""},{"path":"https://muheg.github.io/athletic/reference/deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated function — deprecated","title":"Deprecated function — deprecated","text":"Import lifecycle::deprecated(). See lifecycle package documentation detailed description.","code":""},{"path":"https://muheg.github.io/athletic/reference/deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated function — deprecated","text":"return value function used signal function argument deprecated.","code":""},{"path":[]},{"path":"https://muheg.github.io/athletic/reference/dotdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot Data function — .data","title":"Dot Data function — .data","text":"Import rlang::.data(). See rlang package documentation detailed description.","code":""},{"path":"https://muheg.github.io/athletic/reference/dotdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dot Data function — .data","text":"return value. pronoun use data-masked functions.","code":""},{"path":[]},{"path":"https://muheg.github.io/athletic/reference/get_key_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get key variables — get_key_vars","title":"Get key variables — get_key_vars","text":"get_key_vars() Get function extracts data object. Specifically, function implements algorithm get key variables. function returns Key variables (character vector).","code":""},{"path":"https://muheg.github.io/athletic/reference/get_key_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get key variables — get_key_vars","text":"","code":"get_key_vars(   data_tb,   activity_1L_chr = \"Activity\",   athlete_roles_chr = c(\"Athlete\", \"AlumniAthlete\"),   appointments_var_1L_chr = \"Appointments\",   cancellations_var_1L_chr = \"Cancellations\",   clinical_team_1L_chr = \"Clinical Team\",   clinician_1L_chr = \"Clinician\",   clinician_discipline_1L_chr = \"Service\",   components_chr = c(\"Year\", \"Quarter\", \"Week\"),   cost_var_1L_chr = \"Cost\",   days_1L_chr = \"Weekday\",   duration_1L_chr = \"Duration\",   exclude_chr = \"Group\",   group_1L_chr = character(0),   index_1L_chr = \"Date\",   referrals_var_1L_chr = \"Referrals\",   referrers_1L_chr = \"Referrer Role\",   severity_1L_chr = \"Severity\",   team_disciplines_1L_chr = \"Disciplines\",   uid_var_1L_chr = \"UID\" )"},{"path":"https://muheg.github.io/athletic/reference/get_key_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get key variables — get_key_vars","text":"data_tb Data (tibble) activity_1L_chr Activity (character vector length one), Default: 'Activity' athlete_roles_chr Athlete roles (character vector), Default: c(\"Athlete\", \"AlumniAthlete\") appointments_var_1L_chr Appointments variable (character vector length one), Default: 'Appointments' cancellations_var_1L_chr Cancellations variable (character vector length one), Default: 'Cancellations' clinical_team_1L_chr Clinical team (character vector length one), Default: 'Clinical Team' clinician_1L_chr Clinician (character vector length one), Default: 'Clinician' clinician_discipline_1L_chr Clinician discipline (character vector length one), Default: 'Service' components_chr Components (character vector), Default: c(\"Year\", \"Quarter\", \"Week\") cost_var_1L_chr Cost variable (character vector length one), Default: 'Cost' days_1L_chr Days (character vector length one), Default: 'Weekday' duration_1L_chr Duration (character vector length one), Default: 'Duration' exclude_chr Exclude (character vector), Default: 'Group' group_1L_chr Group (character vector length one), Default: character(0) index_1L_chr Index (character vector length one), Default: 'Date' referrals_var_1L_chr Referrals variable (character vector length one), Default: 'Referrals' referrers_1L_chr Referrers (character vector length one), Default: 'Referrer Role' severity_1L_chr Severity (character vector length one), Default: 'Severity' team_disciplines_1L_chr Team disciplines (character vector length one), Default: 'Disciplines' uid_var_1L_chr Unique identifier variable (character vector length one), Default: 'UID'","code":""},{"path":"https://muheg.github.io/athletic/reference/get_key_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get key variables — get_key_vars","text":"Key variables (character vector)","code":""},{"path":"https://muheg.github.io/athletic/reference/get_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get raw data — get_raw_data","title":"Get raw data — get_raw_data","text":"get_raw_data() Get function extracts data object. Specifically, function implements algorithm get raw data. function returns Datasets (list).","code":""},{"path":"https://muheg.github.io/athletic/reference/get_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get raw data — get_raw_data","text":"","code":"get_raw_data(   path_1L_chr,   referrals_cols_int = 4L:8L,   sheets_ls = NULL,   sheets_int = 1L,   tabs_chr = character(0) )"},{"path":"https://muheg.github.io/athletic/reference/get_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get raw data — get_raw_data","text":"path_1L_chr Path (character vector length one) referrals_cols_int Referrals columns (integer vector), Default: 4L:8L sheets_ls Sheets (list), Default: NULL sheets_int Sheets (integer vector), Default: 1 tabs_chr Tabs (character vector), Default: character(0)","code":""},{"path":"https://muheg.github.io/athletic/reference/get_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get raw data — get_raw_data","text":"Datasets (list)","code":""},{"path":"https://muheg.github.io/athletic/reference/get_sports_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sports variables — get_sports_vars","title":"Get sports variables — get_sports_vars","text":"get_sports_vars() Get function extracts data object. Specifically, function implements algorithm get sports variables. function returns Sports variables (character vector).","code":""},{"path":"https://muheg.github.io/athletic/reference/get_sports_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sports variables — get_sports_vars","text":"","code":"get_sports_vars(   data_df = NULL,   exclude_chr = character(0),   group_1L_chr = character(0) )"},{"path":"https://muheg.github.io/athletic/reference/get_sports_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sports variables — get_sports_vars","text":"data_df Data (data.frame), Default: NULL exclude_chr Exclude (character vector), Default: character(0) group_1L_chr Group (character vector length one), Default: character(0)","code":""},{"path":"https://muheg.github.io/athletic/reference/get_sports_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sports variables — get_sports_vars","text":"Sports variables (character vector)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_clinical_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Make clinical variables — make_clinical_vars","title":"Make clinical variables — make_clinical_vars","text":"make_clinical_vars() Make function creates new R object. Specifically, function implements algorithm make clinical variables. function returns Clinical variables (character vector).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_clinical_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make clinical variables — make_clinical_vars","text":"","code":"make_clinical_vars(   activity_1L_chr = \"Activity\",   clinical_team_1L_chr = \"Clinical Team\",   clinician_1L_chr = \"Clinician\",   clinician_discipline_1L_chr = \"Service\",   duration_1L_chr = \"Duration\",   exclude_chr = character(0),   referrers_1L_chr = \"Referrer Role\",   severity_1L_chr = \"Severity\",   team_disciplines_1L_chr = \"Disciplines\" )"},{"path":"https://muheg.github.io/athletic/reference/make_clinical_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make clinical variables — make_clinical_vars","text":"activity_1L_chr Activity (character vector length one), Default: 'Activity' clinical_team_1L_chr Clinical team (character vector length one), Default: 'Clinical Team' clinician_1L_chr Clinician (character vector length one), Default: 'Clinician' clinician_discipline_1L_chr Clinician discipline (character vector length one), Default: 'Service' duration_1L_chr Duration (character vector length one), Default: 'Duration' exclude_chr Exclude (character vector), Default: character(0) referrers_1L_chr Referrers (character vector length one), Default: 'Referrer Role' severity_1L_chr Severity (character vector length one), Default: 'Severity' team_disciplines_1L_chr Team disciplines (character vector length one), Default: 'Disciplines'","code":""},{"path":"https://muheg.github.io/athletic/reference/make_clinical_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make clinical variables — make_clinical_vars","text":"Clinical variables (character vector)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_fake_clients.html","id":null,"dir":"Reference","previous_headings":"","what":"Make fake clients — make_fake_clients","title":"Make fake clients — make_fake_clients","text":"make_fake_clients() Make function creates new R object. Specifically, function implements algorithm make fake clients. function returns Clients (tibble).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_fake_clients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make fake clients — make_fake_clients","text":"","code":"make_fake_clients(   datasets_ls = NULL,   add_sports_1L_lgl = T,   age_var_nm_1L_chr = \"Age\",   annual_referrals_int = c(350, 500, 550),   appointments_rows_1L_int = 30,   athlete_roles_chr = c(\"Athlete\", \"AlumniAthlete\"),   burn_from_1L_chr = \"2020-03-01\",   burn_referrals_int = c(200, 250),   cancellations_probs_chr = c(0.05, 0.05, 0.03, 0.08, 0.1),   cancellations_rows_1L_int = 247,   categories_chr = make_sports_categories(),   cleanse_ages_1L_lgl = T,   clinician_dbl = c(0.15, 0.06, 0.01, 0.06, 0.68),   clinicians_int = c(10, 5, 3, 4, 50),   clinicians_severity_1L_int = 2,   durations_chr = c(\"Under 30 mins\", \"Between 30 and 45 mins\", \"Between 45 and 75 mins\",     \"50 mins\"),   end_date_1L_chr = \"2024-03-30\",   neuropsychological_rows_1L_int = 1,   prefix_1L_chr = \"Client_\",   retain_1L_dbl = 0.3,   scale_1L_dbl = 100,   missing_1L_chr = character(0),   moderate_int = c(2L, 4L),   notes_rows_1L_int = 3L,   para_probs_dbl = c(0.2, 0.3),   path_1L_chr = character(0),   referrals_cols_int = 4:8,   retainer_rows_1L_int = 12,   sessions_cuts_ls = list(c(1, 2), c(3, 5), c(6, 10), c(10, 15), c(16, 20), c(20, 25)),   sessions_probs_ls = purrr::map(1:5, ~c(0.06, 0.26, 0.35, 0.17, 0.07, 0.09)),   sessions_moderate_int = c(4, 15),   share_at_weekend_dbl = 0.05,   share_by_age_athletes_dbl = c(0.05, 0.25, 0.25, 0.2, 0.15, 0.1),   share_by_age_other_dbl = c(0, 0.05, 0.1, 0.15, 0.15, 0.55),   share_by_quarter_dbl = c(0.2, 0.25, 0.25, 0.3),   share_by_reason_dbl = c(0.15, 0.06, 0.01, 0.06, 0.68),   share_by_referrer_dbl = c(rep(0.1, 3), rep(0.06, 2), 0.1, 0.08, 0.1, 0.3),   share_by_role_dbl = c(0.12, 0.65, 0.01, 0.2, 0.02),   share_by_sex_dbl = c(0.05, 0.55, 0.4),   share_is_para_1L_dbl = 0.28,   sheets_int = c(1, 3:8),   sports_1L_int = integer(0),   sports_tab_1L_int = 2L,   start_date_1L_chr = \"2022-03-01\",   uid_vars_chr = c(\"Client ID\", \"UID\"),   unit_cost_lup = NULL )"},{"path":"https://muheg.github.io/athletic/reference/make_fake_clients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make fake clients — make_fake_clients","text":"datasets_ls Datasets (list), Default: NULL add_sports_1L_lgl Add sports (logical vector length one), Default: T age_var_nm_1L_chr Age variable name (character vector length one), Default: 'Age' annual_referrals_int Annual referrals (integer vector), Default: c(350, 500, 550) appointments_rows_1L_int Appointments rows (integer vector length one), Default: 30 athlete_roles_chr Athlete roles (character vector), Default: c(\"Athlete\", \"AlumniAthlete\") burn_from_1L_chr Burn (character vector length one), Default: '2020-03-01' burn_referrals_int Burn referrals (integer vector), Default: c(200, 250) cancellations_probs_chr Cancellations probabilities (character vector), Default: c(0.05, 0.05, 0.03, 0.08, 0.1) cancellations_rows_1L_int Cancellations rows (integer vector length one), Default: 247 categories_chr Categories (character vector), Default: make_sports_categories() cleanse_ages_1L_lgl Cleanse ages (logical vector length one), Default: T clinician_dbl Clinician (double vector), Default: c(0.15, 0.06, 0.01, 0.06, 0.68) clinicians_int Clinicians (integer vector), Default: c(10, 5, 3, 4, 50) clinicians_severity_1L_int Clinicians severity (integer vector length one), Default: 2 durations_chr Durations (character vector), Default: c(\"30 mins\", \"30 45 mins\", \"45 75 mins\", \"50 mins\") end_date_1L_chr End date (character vector length one), Default: '2024-03-30' neuropsychological_rows_1L_int Neuropsychological rows (integer vector length one), Default: 1 prefix_1L_chr Prefix (character vector length one), Default: 'Client_' retain_1L_dbl Retain (double vector length one), Default: 0.3 scale_1L_dbl Scale (double vector length one), Default: 100 missing_1L_chr Missing (character vector length one), Default: character(0) moderate_int Moderate (integer vector), Default: c(2L, 4L) notes_rows_1L_int Notes rows (integer vector length one), Default: 3 para_probs_dbl Para probabilities (double vector), Default: c(0.2, 0.3) path_1L_chr Path (character vector length one), Default: character(0) referrals_cols_int Referrals columns (integer vector), Default: 4:8 retainer_rows_1L_int Retainer rows (integer vector length one), Default: 12 sessions_cuts_ls Sessions cuts (list), Default: list(c(1, 2), c(3, 5), c(6, 10), c(10, 15), c(16, 20), c(20, 25)) sessions_probs_ls Sessions probabilities (list), Default: purrr::map(1:5, ~c(0.06, 0.26, 0.35, 0.17, 0.07, 0.09)) sessions_moderate_int Sessions moderate (integer vector), Default: c(4, 15) share_at_weekend_dbl Share weekend (double vector), Default: 0.05 share_by_age_athletes_dbl Share age athletes (double vector), Default: c(0.05, 0.25, 0.25, 0.2, 0.15, 0.1) share_by_age_other_dbl Share age (double vector), Default: c(0, 0.05, 0.1, 0.15, 0.15, 0.55) share_by_quarter_dbl Share quarter (double vector), Default: c(0.2, 0.25, 0.25, 0.3) share_by_reason_dbl Share reason (double vector), Default: c(0.15, 0.06, 0.01, 0.06, 0.68) share_by_referrer_dbl Share referrer (double vector), Default: c(rep(0.1, 3), rep(0.06, 2), 0.1, 0.08, 0.1, 0.3) share_by_role_dbl Share role (double vector), Default: c(0.12, 0.65, 0.01, 0.2, 0.02) share_by_sex_dbl Share sex (double vector), Default: c(0.05, 0.55, 0.4) share_is_para_1L_dbl Share para (double vector length one), Default: 0.28 sheets_int Sheets (integer vector), Default: c(1, 3:8) sports_1L_int Sports (integer vector length one), Default: integer(0) sports_tab_1L_int Sports tab (integer vector length one), Default: 2 start_date_1L_chr Start date (character vector length one), Default: '2022-03-01' uid_vars_chr Unique identifier variables (character vector), Default: c(\"Client ID\", \"UID\") unit_cost_lup Unit cost (lookup table), Default: NULL","code":""},{"path":"https://muheg.github.io/athletic/reference/make_fake_clients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make fake clients — make_fake_clients","text":"Clients (tibble)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_keepers.html","id":null,"dir":"Reference","previous_headings":"","what":"Make keepers — make_keepers","title":"Make keepers — make_keepers","text":"make_keepers() Make function creates new R object. Specifically, function implements algorithm make keepers. function returns Keep (character vector).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_keepers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make keepers — make_keepers","text":"","code":"make_keepers(   names_chr,   clinical_vars_chr = make_clinical_vars(),   keep_cdn_1L_chr = c(\"All\", \"Personal\", \"Provider\", \"Severity\", \"Sports\"),   severity_1L_int = 8L,   sports_vars_chr = get_sports_vars() )"},{"path":"https://muheg.github.io/athletic/reference/make_keepers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make keepers — make_keepers","text":"names_chr Names (character vector) clinical_vars_chr Clinical variables (character vector), Default: make_clinical_vars() keep_cdn_1L_chr Keep condition (character vector length one), Default: c(\"\", \"Personal\", \"Provider\", \"Severity\", \"Sports\") severity_1L_int Severity (integer vector length one), Default: 8 sports_vars_chr Sports variables (character vector), Default: get_sports_vars()","code":""},{"path":"https://muheg.github.io/athletic/reference/make_keepers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make keepers — make_keepers","text":"Keep (character vector)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_keys_dss.html","id":null,"dir":"Reference","previous_headings":"","what":"Make keys datasets — make_keys_dss","title":"Make keys datasets — make_keys_dss","text":"make_keys_dss() Make function creates new R object. Specifically, function implements algorithm make keys datasets. function returns Totals datasets (list).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_keys_dss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make keys datasets — make_keys_dss","text":"","code":"make_keys_dss(   data_tb,   key_vars_chr,   activity_1L_chr = \"Activity\",   athlete_roles_chr = c(\"Athlete\", \"AlumniAthlete\"),   appointments_var_1L_chr = \"Appointments\",   cancellations_var_1L_chr = \"Cancellations\",   clinical_team_1L_chr = \"Clinical Team\",   clinician_1L_chr = \"Clinician\",   clinician_discipline_1L_chr = \"Service\",   components_chr = c(\"Year\", \"Quarter\", \"Week\"),   cost_var_1L_chr = \"Cost\",   days_1L_chr = \"Weekday\",   duration_1L_chr = \"Duration\",   exclude_chr = \"Group\",   fns_ls = NULL,   group_1L_chr = character(0),   index_1L_chr = \"Date\",   periods_chr = c(\"sub\", \"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\"),   referrals_var_1L_chr = \"Referrals\",   referrers_1L_chr = \"Referrer Role\",   severity_1L_chr = \"Severity\",   team_disciplines_1L_chr = \"Disciplines\",   uid_var_1L_chr = \"UID\" )"},{"path":"https://muheg.github.io/athletic/reference/make_keys_dss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make keys datasets — make_keys_dss","text":"data_tb Data (tibble) key_vars_chr Key variables (character vector) activity_1L_chr Activity (character vector length one), Default: 'Activity' athlete_roles_chr Athlete roles (character vector), Default: c(\"Athlete\", \"AlumniAthlete\") appointments_var_1L_chr Appointments variable (character vector length one), Default: 'Appointments' cancellations_var_1L_chr Cancellations variable (character vector length one), Default: 'Cancellations' clinical_team_1L_chr Clinical team (character vector length one), Default: 'Clinical Team' clinician_1L_chr Clinician (character vector length one), Default: 'Clinician' clinician_discipline_1L_chr Clinician discipline (character vector length one), Default: 'Service' components_chr Components (character vector), Default: c(\"Year\", \"Quarter\", \"Week\") cost_var_1L_chr Cost variable (character vector length one), Default: 'Cost' days_1L_chr Days (character vector length one), Default: 'Weekday' duration_1L_chr Duration (character vector length one), Default: 'Duration' exclude_chr Exclude (character vector), Default: 'Group' fns_ls Functions (list), Default: NULL group_1L_chr Group (character vector length one), Default: character(0) index_1L_chr Index (character vector length one), Default: 'Date' periods_chr Periods (character vector), Default: c(\"sub\", \"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\") referrals_var_1L_chr Referrals variable (character vector length one), Default: 'Referrals' referrers_1L_chr Referrers (character vector length one), Default: 'Referrer Role' severity_1L_chr Severity (character vector length one), Default: 'Severity' team_disciplines_1L_chr Team disciplines (character vector length one), Default: 'Disciplines' uid_var_1L_chr Unique identifier variable (character vector length one), Default: 'UID'","code":""},{"path":"https://muheg.github.io/athletic/reference/make_keys_dss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make keys datasets — make_keys_dss","text":"Totals datasets (list)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_linked_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Make linked dataset — make_linked_ds","title":"Make linked dataset — make_linked_ds","text":"make_linked_ds() Make function creates new R object. Specifically, function implements algorithm make linked dataset. function returns Data (output object multiple potential types).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_linked_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make linked dataset — make_linked_ds","text":"","code":"make_linked_ds(   datasets_ls = NULL,   disciplines_1L_lgl = TRUE,   end_date_dtm = lubridate::ymd(\"2024-06-30\"),   exclude_chr = c(\"Cost\", \"Duration\"),   imputed_uid_pfx_chr = \"UNK\",   keep_all_1L_lgl = FALSE,   missing_1L_chr = \"0\",   path_1L_chr = character(0),   provider_id_1L_chr = \"ProviderID\",   provider_location_1L_chr = \"ProviderState\",   referrals_cols_int = 4:7,   separation_after_dbl = 3,   sessions_moderate_int = c(4, 15),   severity_args_ls = NULL,   severity_var_1L_chr = \"Severity\",   sheets_int = 1:5,   uid_pfx_1L_chr = \"CID\",   uid_vars_chr = c(\"MedlinksID\", \"AISID\"),   unit_1L_chr = \"month\",   var_ctg_chr = character(0),   what_1L_chr = c(\"table\", \"dyad\") )"},{"path":"https://muheg.github.io/athletic/reference/make_linked_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make linked dataset — make_linked_ds","text":"datasets_ls Datasets (list), Default: NULL disciplines_1L_lgl Disciplines (logical vector length one), Default: TRUE end_date_dtm End date (date vector), Default: lubridate::ymd(\"2024-06-30\") exclude_chr Exclude (character vector), Default: c(\"Cost\", \"Duration\") imputed_uid_pfx_chr Imputed unique identifier prefix (character vector), Default: 'UNK' keep_all_1L_lgl Keep (logical vector length one), Default: FALSE missing_1L_chr Missing (character vector length one), Default: '0' path_1L_chr Path (character vector length one), Default: character(0) provider_id_1L_chr Provider identity (character vector length one), Default: 'ProviderID' provider_location_1L_chr Provider location (character vector length one), Default: 'ProviderState' referrals_cols_int Referrals columns (integer vector), Default: 4:7 separation_after_dbl Separation (double vector), Default: 3 sessions_moderate_int Sessions moderate (integer vector), Default: c(4, 15) severity_args_ls Severity arguments (list), Default: NULL severity_var_1L_chr Severity variable (character vector length one), Default: 'Severity' sheets_int Sheets (integer vector), Default: 1:5 uid_pfx_1L_chr Unique identifier prefix (character vector length one), Default: 'CID' uid_vars_chr Unique identifier variables (character vector), Default: c(\"MedlinksID\", \"AISID\") unit_1L_chr Unit (character vector length one), Default: 'month' var_ctg_chr Variable category (character vector), Default: character(0) what_1L_chr (character vector length one), Default: c(\"table\", \"dyad\")","code":""},{"path":"https://muheg.github.io/athletic/reference/make_linked_ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make linked dataset — make_linked_ds","text":"Data (output object multiple potential types)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_modelling_dss.html","id":null,"dir":"Reference","previous_headings":"","what":"Make modelling datasets — make_modelling_dss","title":"Make modelling datasets — make_modelling_dss","text":"make_modelling_dss() Make function creates new R object. Specifically, function implements algorithm make modelling datasets. function called side effects return value.","code":""},{"path":"https://muheg.github.io/athletic/reference/make_modelling_dss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make modelling datasets — make_modelling_dss","text":"","code":"make_modelling_dss(   data_tb,   activity_1L_chr = \"Activity\",   athlete_roles_chr = c(\"Athlete\", \"AlumniAthlete\"),   appointments_var_1L_chr = \"Appointments\",   cancellations_var_1L_chr = \"Cancellations\",   clinical_team_1L_chr = \"Clinical Team\",   clinician_1L_chr = \"Clinician\",   clinician_discipline_1L_chr = \"Service\",   components_chr = c(\"Year\", \"Quarter\", \"Week\"),   cost_var_1L_chr = \"Cost\",   days_1L_chr = \"Weekday\",   duration_1L_chr = \"Duration\",   exclude_chr = \"Group\",   fns_ls = NULL,   group_1L_chr = character(0),   index_1L_chr = \"Date\",   key_vars_chr = character(0),   periods_chr = c(\"sub\", \"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\"),   referrals_var_1L_chr = \"Referrals\",   referrers_1L_chr = \"Referrer Role\",   severity_1L_chr = \"Severity\",   team_disciplines_1L_chr = \"Disciplines\",   uid_var_1L_chr = \"UID\" )"},{"path":"https://muheg.github.io/athletic/reference/make_modelling_dss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make modelling datasets — make_modelling_dss","text":"data_tb Data (tibble) activity_1L_chr Activity (character vector length one), Default: 'Activity' athlete_roles_chr Athlete roles (character vector), Default: c(\"Athlete\", \"AlumniAthlete\") appointments_var_1L_chr Appointments variable (character vector length one), Default: 'Appointments' cancellations_var_1L_chr Cancellations variable (character vector length one), Default: 'Cancellations' clinical_team_1L_chr Clinical team (character vector length one), Default: 'Clinical Team' clinician_1L_chr Clinician (character vector length one), Default: 'Clinician' clinician_discipline_1L_chr Clinician discipline (character vector length one), Default: 'Service' components_chr Components (character vector), Default: c(\"Year\", \"Quarter\", \"Week\") cost_var_1L_chr Cost variable (character vector length one), Default: 'Cost' days_1L_chr Days (character vector length one), Default: 'Weekday' duration_1L_chr Duration (character vector length one), Default: 'Duration' exclude_chr Exclude (character vector), Default: 'Group' fns_ls Functions (list), Default: NULL group_1L_chr Group (character vector length one), Default: character(0) index_1L_chr Index (character vector length one), Default: 'Date' key_vars_chr Key variables (character vector), Default: character(0) periods_chr Periods (character vector), Default: c(\"sub\", \"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\") referrals_var_1L_chr Referrals variable (character vector length one), Default: 'Referrals' referrers_1L_chr Referrers (character vector length one), Default: 'Referrer Role' severity_1L_chr Severity (character vector length one), Default: 'Severity' team_disciplines_1L_chr Team disciplines (character vector length one), Default: 'Disciplines' uid_var_1L_chr Unique identifier variable (character vector length one), Default: 'UID'","code":""},{"path":"https://muheg.github.io/athletic/reference/make_modelling_dss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make modelling datasets — make_modelling_dss","text":"dss_lss (object)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_severity_args_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"Make severity arguments list — make_severity_args_ls","title":"Make severity arguments list — make_severity_args_ls","text":"make_severity_args_ls() Make function creates new R object. Specifically, function implements algorithm make severity arguments list. function returns Severity arguments (list).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_severity_args_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make severity arguments list — make_severity_args_ls","text":"","code":"make_severity_args_ls(   disciplines_ls,   sessions_ls,   names_chr = character(0),   severity_var_1L_chr = \"Severity\" )"},{"path":"https://muheg.github.io/athletic/reference/make_severity_args_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make severity arguments list — make_severity_args_ls","text":"disciplines_ls Disciplines (list) sessions_ls Sessions (list) names_chr Names (character vector), Default: character(0) severity_var_1L_chr Severity variable (character vector length one), Default: 'Severity'","code":""},{"path":"https://muheg.github.io/athletic/reference/make_severity_args_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make severity arguments list — make_severity_args_ls","text":"Severity arguments (list)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_severity_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Make severity variables — make_severity_vars","title":"Make severity variables — make_severity_vars","text":"make_severity_vars() Make function creates new R object. Specifically, function implements algorithm make severity variables. function returns Severity variables (character vector).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_severity_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make severity variables — make_severity_vars","text":"","code":"make_severity_vars(severity_args_ls, severity_var_1L_chr = \"Severity\")"},{"path":"https://muheg.github.io/athletic/reference/make_severity_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make severity variables — make_severity_vars","text":"severity_args_ls Severity arguments (list) severity_var_1L_chr Severity variable (character vector length one), Default: 'Severity'","code":""},{"path":"https://muheg.github.io/athletic/reference/make_severity_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make severity variables — make_severity_vars","text":"Severity variables (character vector)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_sports_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Make sports categories — make_sports_categories","title":"Make sports categories — make_sports_categories","text":"make_sports_categories() Make function creates new R object. Specifically, function implements algorithm make sports categories. function returns Categories (character vector).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_sports_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make sports categories — make_sports_categories","text":"","code":"make_sports_categories(   type_1L_int = c(\"current\", \"deprecated\"),   which_int = integer(0) )"},{"path":"https://muheg.github.io/athletic/reference/make_sports_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make sports categories — make_sports_categories","text":"type_1L_int Type (integer vector length one), Default: c(\"current\", \"deprecated\") which_int (integer vector), Default: integer(0)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_sports_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make sports categories — make_sports_categories","text":"Categories (character vector)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_sports_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Make sports groups — make_sports_groups","title":"Make sports groups — make_sports_groups","text":"make_sports_groups() Make function creates new R object. Specifically, function implements algorithm make sports groups. function returns Grouped (tibble).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_sports_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make sports groups — make_sports_groups","text":"","code":"make_sports_groups(   datasets_ls,   categories_chr = make_sports_categories(),   simple_1L_lgl = TRUE )"},{"path":"https://muheg.github.io/athletic/reference/make_sports_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make sports groups — make_sports_groups","text":"datasets_ls Datasets (list) categories_chr Categories (character vector), Default: make_sports_categories() simple_1L_lgl Simple (logical vector length one), Default: TRUE","code":""},{"path":"https://muheg.github.io/athletic/reference/make_sports_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make sports groups — make_sports_groups","text":"Grouped (tibble)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_sports_tb.html","id":null,"dir":"Reference","previous_headings":"","what":"Make sports tibble — make_sports_tb","title":"Make sports tibble — make_sports_tb","text":"make_sports_tb() Make function creates new R object. Specifically, function implements algorithm make sports tibble. function returns Sports (tibble).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_sports_tb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make sports tibble — make_sports_tb","text":"","code":"make_sports_tb(   datasets_ls,   categories_chr = make_sports_categories(\"deprecated\") )"},{"path":"https://muheg.github.io/athletic/reference/make_sports_tb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make sports tibble — make_sports_tb","text":"datasets_ls Datasets (list) categories_chr Categories (character vector), Default: make_sports_categories(\"deprecated\")","code":""},{"path":"https://muheg.github.io/athletic/reference/make_sports_tb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make sports tibble — make_sports_tb","text":"Sports (tibble)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_totals_dss.html","id":null,"dir":"Reference","previous_headings":"","what":"Make totals datasets — make_totals_dss","title":"Make totals datasets — make_totals_dss","text":"make_totals_dss() Make function creates new R object. Specifically, function implements algorithm make totals datasets. function returns Totals datasets (list).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_totals_dss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make totals datasets — make_totals_dss","text":"","code":"make_totals_dss(   data_tb,   activity_1L_chr = \"Activity\",   athlete_roles_chr = c(\"Athlete\", \"AlumniAthlete\"),   appointments_var_1L_chr = \"Appointments\",   cancellations_var_1L_chr = \"Cancellations\",   clinical_team_1L_chr = \"Clinical Team\",   clinician_1L_chr = \"Clinician\",   clinician_discipline_1L_chr = \"Service\",   components_chr = c(\"Year\", \"Quarter\", \"Week\"),   cost_var_1L_chr = \"Cost\",   days_1L_chr = \"Weekday\",   duration_1L_chr = \"Duration\",   exclude_chr = \"Group\",   fns_ls = NULL,   group_1L_chr = character(0),   index_1L_chr = \"Date\",   periods_chr = c(\"sub\", \"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\"),   referrals_var_1L_chr = \"Referrals\",   referrers_1L_chr = \"Referrer Role\",   severity_1L_chr = \"Severity\",   team_disciplines_1L_chr = \"Disciplines\",   uid_var_1L_chr = \"UID\" )"},{"path":"https://muheg.github.io/athletic/reference/make_totals_dss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make totals datasets — make_totals_dss","text":"data_tb Data (tibble) activity_1L_chr Activity (character vector length one), Default: 'Activity' athlete_roles_chr Athlete roles (character vector), Default: c(\"Athlete\", \"AlumniAthlete\") appointments_var_1L_chr Appointments variable (character vector length one), Default: 'Appointments' cancellations_var_1L_chr Cancellations variable (character vector length one), Default: 'Cancellations' clinical_team_1L_chr Clinical team (character vector length one), Default: 'Clinical Team' clinician_1L_chr Clinician (character vector length one), Default: 'Clinician' clinician_discipline_1L_chr Clinician discipline (character vector length one), Default: 'Service' components_chr Components (character vector), Default: c(\"Year\", \"Quarter\", \"Week\") cost_var_1L_chr Cost variable (character vector length one), Default: 'Cost' days_1L_chr Days (character vector length one), Default: 'Weekday' duration_1L_chr Duration (character vector length one), Default: 'Duration' exclude_chr Exclude (character vector), Default: 'Group' fns_ls Functions (list), Default: NULL group_1L_chr Group (character vector length one), Default: character(0) index_1L_chr Index (character vector length one), Default: 'Date' periods_chr Periods (character vector), Default: c(\"sub\", \"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\") referrals_var_1L_chr Referrals variable (character vector length one), Default: 'Referrals' referrers_1L_chr Referrers (character vector length one), Default: 'Referrer Role' severity_1L_chr Severity (character vector length one), Default: 'Severity' team_disciplines_1L_chr Team disciplines (character vector length one), Default: 'Disciplines' uid_var_1L_chr Unique identifier variable (character vector length one), Default: 'UID'","code":""},{"path":"https://muheg.github.io/athletic/reference/make_totals_dss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make totals datasets — make_totals_dss","text":"Totals datasets (list)","code":""},{"path":"https://muheg.github.io/athletic/reference/make_wide_dss.html","id":null,"dir":"Reference","previous_headings":"","what":"Make wide datasets — make_wide_dss","title":"Make wide datasets — make_wide_dss","text":"make_wide_dss() Make function creates new R object. Specifically, function implements algorithm make wide datasets. function returns Wide datasets (list).","code":""},{"path":"https://muheg.github.io/athletic/reference/make_wide_dss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make wide datasets — make_wide_dss","text":"","code":"make_wide_dss(   data_tb,   activity_1L_chr = \"Activity\",   athlete_roles_chr = c(\"Athlete\", \"AlumniAthlete\"),   appointments_var_1L_chr = \"Appointments\",   cancellations_var_1L_chr = \"Cancellations\",   clinical_team_1L_chr = \"Clinical Team\",   clinician_1L_chr = \"Clinician\",   clinician_discipline_1L_chr = \"Service\",   components_chr = c(\"Year\", \"Quarter\", \"Week\"),   cost_var_1L_chr = \"Cost\",   days_1L_chr = \"Weekday\",   duration_1L_chr = \"Duration\",   exclude_chr = \"Group\",   fns_ls = NULL,   group_1L_chr = character(0),   index_1L_chr = \"Date\",   key_vars_chr = character(0),   periods_chr = c(\"sub\", \"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\"),   referrals_var_1L_chr = \"Referrals\",   referrers_1L_chr = \"Referrer Role\",   severity_1L_chr = \"Severity\",   team_disciplines_1L_chr = \"Disciplines\",   uid_var_1L_chr = \"UID\" )"},{"path":"https://muheg.github.io/athletic/reference/make_wide_dss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make wide datasets — make_wide_dss","text":"data_tb Data (tibble) activity_1L_chr Activity (character vector length one), Default: 'Activity' athlete_roles_chr Athlete roles (character vector), Default: c(\"Athlete\", \"AlumniAthlete\") appointments_var_1L_chr Appointments variable (character vector length one), Default: 'Appointments' cancellations_var_1L_chr Cancellations variable (character vector length one), Default: 'Cancellations' clinical_team_1L_chr Clinical team (character vector length one), Default: 'Clinical Team' clinician_1L_chr Clinician (character vector length one), Default: 'Clinician' clinician_discipline_1L_chr Clinician discipline (character vector length one), Default: 'Service' components_chr Components (character vector), Default: c(\"Year\", \"Quarter\", \"Week\") cost_var_1L_chr Cost variable (character vector length one), Default: 'Cost' days_1L_chr Days (character vector length one), Default: 'Weekday' duration_1L_chr Duration (character vector length one), Default: 'Duration' exclude_chr Exclude (character vector), Default: 'Group' fns_ls Functions (list), Default: NULL group_1L_chr Group (character vector length one), Default: character(0) index_1L_chr Index (character vector length one), Default: 'Date' key_vars_chr Key variables (character vector), Default: character(0) periods_chr Periods (character vector), Default: c(\"sub\", \"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\") referrals_var_1L_chr Referrals variable (character vector length one), Default: 'Referrals' referrers_1L_chr Referrers (character vector length one), Default: 'Referrer Role' severity_1L_chr Severity (character vector length one), Default: 'Severity' team_disciplines_1L_chr Team disciplines (character vector length one), Default: 'Disciplines' uid_var_1L_chr Unique identifier variable (character vector length one), Default: 'UID'","code":""},{"path":"https://muheg.github.io/athletic/reference/make_wide_dss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make wide datasets — make_wide_dss","text":"Wide datasets (list)","code":""},{"path":"https://muheg.github.io/athletic/reference/nseequals.html","id":null,"dir":"Reference","previous_headings":"","what":"Non standard evaluation assignment function — :=","title":"Non standard evaluation assignment function — :=","text":"Import := function, implementing rlang::dyn-dots(). See rlang package documentation detailed description.","code":""},{"path":"https://muheg.github.io/athletic/reference/nseequals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Non standard evaluation assignment function — :=","text":"return value. Used implement non standard evaluation within dynamic dots context.","code":""},{"path":[]},{"path":"https://muheg.github.io/athletic/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Import magrittr::%>%(). See magrittr package documentation detailed description.","code":""},{"path":"https://muheg.github.io/athletic/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"type return function depends left hand side right hand side arguments supplied . principle, type returned object feasible.","code":""},{"path":[]},{"path":"https://muheg.github.io/athletic/reference/transform_to_prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to prep — transform_to_prep","title":"Transform to prep — transform_to_prep","text":"transform_to_prep() Transform function edits object way core object attributes - e.g. shape, dimensions, elements, type - altered. Specifically, function implements algorithm transform prep. function returns Data wide (tibble).","code":""},{"path":"https://muheg.github.io/athletic/reference/transform_to_prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to prep — transform_to_prep","text":"","code":"transform_to_prep(   data_tb,   activity_1L_chr = \"Activity\",   athlete_roles_chr = c(\"Athlete\", \"AlumniAthlete\"),   appointments_var_1L_chr = \"Appointments\",   cancellations_var_1L_chr = \"Cancellations\",   clinical_team_1L_chr = \"Clinical Team\",   clinician_1L_chr = \"Clinician\",   clinician_discipline_1L_chr = \"Service\",   components_chr = c(\"Year\", \"Quarter\", \"Week\"),   cost_var_1L_chr = \"Cost\",   days_1L_chr = \"Weekday\",   duration_1L_chr = \"Duration\",   exclude_chr = \"Group\",   group_1L_chr = character(0),   index_1L_chr = \"Date\",   referrals_var_1L_chr = \"Referrals\",   referrers_1L_chr = \"Referrer Role\",   severity_1L_chr = \"Severity\",   team_disciplines_1L_chr = \"Disciplines\",   uid_var_1L_chr = \"UID\",   what_1L_chr = c(\"wide\", \"prep\") )"},{"path":"https://muheg.github.io/athletic/reference/transform_to_prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform to prep — transform_to_prep","text":"data_tb Data (tibble) activity_1L_chr Activity (character vector length one), Default: 'Activity' athlete_roles_chr Athlete roles (character vector), Default: c(\"Athlete\", \"AlumniAthlete\") appointments_var_1L_chr Appointments variable (character vector length one), Default: 'Appointments' cancellations_var_1L_chr Cancellations variable (character vector length one), Default: 'Cancellations' clinical_team_1L_chr Clinical team (character vector length one), Default: 'Clinical Team' clinician_1L_chr Clinician (character vector length one), Default: 'Clinician' clinician_discipline_1L_chr Clinician discipline (character vector length one), Default: 'Service' components_chr Components (character vector), Default: c(\"Year\", \"Quarter\", \"Week\") cost_var_1L_chr Cost variable (character vector length one), Default: 'Cost' days_1L_chr Days (character vector length one), Default: 'Weekday' duration_1L_chr Duration (character vector length one), Default: 'Duration' exclude_chr Exclude (character vector), Default: 'Group' group_1L_chr Group (character vector length one), Default: character(0) index_1L_chr Index (character vector length one), Default: 'Date' referrals_var_1L_chr Referrals variable (character vector length one), Default: 'Referrals' referrers_1L_chr Referrers (character vector length one), Default: 'Referrer Role' severity_1L_chr Severity (character vector length one), Default: 'Severity' team_disciplines_1L_chr Team disciplines (character vector length one), Default: 'Disciplines' uid_var_1L_chr Unique identifier variable (character vector length one), Default: 'UID' what_1L_chr (character vector length one), Default: c(\"wide\", \"prep\")","code":""},{"path":"https://muheg.github.io/athletic/reference/transform_to_prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform to prep — transform_to_prep","text":"Data wide (tibble)","code":""},{"path":"https://muheg.github.io/athletic/reference/update_fake_ages.html","id":null,"dir":"Reference","previous_headings":"","what":"Update fake ages — update_fake_ages","title":"Update fake ages — update_fake_ages","text":"update_fake_ages() Update function edits object, preserving core object attributes. Specifically, function implements algorithm update fake ages. function returns Ages (character vector).","code":""},{"path":"https://muheg.github.io/athletic/reference/update_fake_ages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update fake ages — update_fake_ages","text":"","code":"update_fake_ages(ages_chr)"},{"path":"https://muheg.github.io/athletic/reference/update_fake_ages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update fake ages — update_fake_ages","text":"ages_chr Ages (character vector)","code":""},{"path":"https://muheg.github.io/athletic/reference/update_fake_ages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update fake ages — update_fake_ages","text":"Ages (character vector)","code":""},{"path":"https://muheg.github.io/athletic/reference/update_ingested_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Update ingested data — update_ingested_data","title":"Update ingested data — update_ingested_data","text":"update_ingested_data() Update function edits object, preserving core object attributes. Specifically, function implements algorithm update ingested data. function returns Datasets (list).","code":""},{"path":"https://muheg.github.io/athletic/reference/update_ingested_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update ingested data — update_ingested_data","text":"","code":"update_ingested_data(   datasets_ls,   categories_chr = c(\"Individual Sports\", \"Aesthetic Sports\", \"Winter Sports\"),   exclude_chr = c(\"Cost\", \"Duration\"),   imputed_uid_pfx_chr = \"UNK\",   missing_1L_chr = \"0\",   provider_id_1L_chr = \"ProviderID\",   provider_location_1L_chr = \"ProviderState\",   uid_vars_chr = c(\"MedlinksID\", \"AISID\") )"},{"path":"https://muheg.github.io/athletic/reference/update_ingested_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update ingested data — update_ingested_data","text":"datasets_ls Datasets (list) categories_chr Categories (character vector), Default: c(\"Individual Sports\", \"Aesthetic Sports\", \"Winter Sports\") exclude_chr Exclude (character vector), Default: c(\"Cost\", \"Duration\") imputed_uid_pfx_chr Imputed unique identifier prefix (character vector), Default: 'UNK' missing_1L_chr Missing (character vector length one), Default: '0' provider_id_1L_chr Provider identity (character vector length one), Default: 'ProviderID' provider_location_1L_chr Provider location (character vector length one), Default: 'ProviderState' uid_vars_chr Unique identifier variables (character vector), Default: c(\"MedlinksID\", \"AISID\")","code":""},{"path":"https://muheg.github.io/athletic/reference/update_ingested_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update ingested data — update_ingested_data","text":"Datasets (list)","code":""}]
